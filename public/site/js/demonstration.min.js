// FLAT Theme v2.2

options = {
    'host': 'http://localhost/'
}

function currentTime() {
    var $el = $(".stats .icon-calendar").parent(),
        currentDate = new Date(),
        monthNames = ["January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        ],
        dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

    $el.find(".details .big").html(monthNames[currentDate.getMonth()] + " " + currentDate.getDate() + ", " + currentDate.getFullYear());
    $el.find(".details span").last().html(dayNames[currentDate.getDay()] + ", " + currentDate.getHours() + ":" + ("0" + currentDate.getMinutes()).slice(-2));
    setTimeout(function() {
        currentTime();
    }, 10000);
}

function showTooltip(x, y, contents) {
    $('<div id="tooltip" class="flot-tooltip tooltip"><div class="tooltip-arrow"></div>' + contents + '</div>').css({
        top: y - 43,
        left: x - 15,
    }).appendTo("body").fadeIn(200);
}

function Feed() {
    
    // console.log(localStorage.getItem('activity'));
    // arrActivity = JSON.parse(localStorage.getItem('activity'));
    // last = localStorage.getItem('activity')=='undefined' ? arrActivity[arrActivity.length-1].id : '';

    // console.log("Last Id " + last);

    var url = options.host + 'blacklist/api/activity/';
    $.ajax({
      url: url,
      beforeSend: function (xhr) {
            xhr.setRequestHeader ("Authorization", "Basic " + btoa("admin@blacklist.com:available"));
        }
    }).done(function(data) {
        
        $.each(JSON.parse(data), createElem);

    });

    
}
// Data 

function getElem(action){

    switch (action) {
        case 'add-user': return '{"label": "success", "icon": "fa-plus-square", "actiondesc" : "Added New User "}'; break;
        case 'approve': return '{"label": "success", "icon": "fa-check-square", "actiondesc" : "Approves Update "}'; break;
        case 'add-list': return '{"label": "info", "icon": "fa-plus", "actiondesc" : "Added Pending MSISDNs "}'; break;
        case 'implement': return '{"label": "success", "icon": "fa-check", "actiondesc" : "Implements "}'; break;
        case 'login': return '{"label": "info", "icon": "fa-user", "actiondesc" : "Logs Into "}'; break;
        case 'delete' : return '{"label": "danger", "icon": "fa-times", "actiondesc" : "Deletes "}'; break;
        case 'filter' : return '{"label": "info", "icon": "fa-filter", "actiondesc" : "Filters "}'; break;
        case 'notify' : return '{"label": "default", "icon": "fa-envelope", "actiondesc" : "Notifies "}'; break;
    }
}

function createElem(index, element) {
 var $el = $("#randomFeed");
 console.log(element);
 ele = JSON.parse(getElem(element.action));
 console.log('Element'+ ele);
 newElement =  '<span class="label label-' + ele.label + '"><i class="fa ' + ele.icon + 
  '"></i></span><a href="' + element.url + '">' + element.actor + '</a> ' + ele.actiondesc + ' ' + element.object + ' at ' + element.timestamp;
  // console.log(newElement);
  auto = $el.parents(".box").find(".box-title .actions .custom-checkbox").hasClass("checkbox-active");
  if (auto) {
      $el.append("<tr><td>" + newElement + "</td></tr>").find("tr").first().hide();
      $el.find("tr").first().fadeIn(1);
      if ($el.find("tbody tr").length > 20) {
          $el.find("tbody tr").last().fadeOut(400, function() {
              $(this).remove();
          });
      }
  }

  slimScrollUpdate($el.parents(".scrollable"));

  // setTimeout(function() {
  //     Feed();
  // }, 10000);
}


$(document).ready(function() {

    var $left = $("#left");

    // Displays Timer
    currentTime();
    // Activity feeds update
    Feed();


    if ($("#flot-hdd").length > 0) {

        var url = options.host + 'blacklist/api/report/';
        $.ajax({
          url: url,
          beforeSend: function (xhr) {
            xhr.setRequestHeader ("Authorization", "Basic " + btoa("admin@blacklist.com:available"));
        }
        }).done(function(responseText) {

            data = JSON.parse(responseText);
            console.log(data);

            var currentTime = new Date();
            var month = currentTime.getMonth() + 1;
            var day = currentTime.getDate();
            var year = currentTime.getFullYear();
            var today = month + "/" + day + "/" + year;

            $.plot($("#flot-hdd"), [{
                label: "Blacklist",
                data: data,
                color: "#f36b6b"
            }], {
                xaxis: {
                    min: (new Date(today)).getTime(),
                    max: (new Date()).getTime(),
                    mode: "time",
                    tickSize: [3, "hour"],
                },
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true,
                    }
                },
                grid: {
                    hoverable: true,
                    clickable: true
                },
                legend: {
                    show: false
                }
            });
        });

        $("#flot-hdd").bind("plothover", function(event, pos, item) {
            if (item) {
                if (previousPoint != item.dataIndex) {
                    previousPoint = item.dataIndex;

                    $("#tooltip").remove();
                    var y = item.datapoint[1].toFixed();

                    showTooltip(item.pageX, item.pageY,
                        item.series.label + " = " + y + " subscribers");
                }
            } else {
                $("#tooltip").remove();
                previousPoint = null;
            }
        });
    }


    if ($("#sico").length > 0) {
        function formatIcons(option) {
            return "<i class='fa " + option.text + "'></i> ." + option.text;
        }
        $("#sico").select2({
            formatResult: formatIcons,
            formatSelection: formatIcons,
            escapeMarkup: function(m) {
                return m;
            }
        });
    }
});

$(window).resize(function() {
    // console.log($(window).width());
});


